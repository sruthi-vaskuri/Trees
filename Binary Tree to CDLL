class Solution
{ 
    //Function to convert binary tree into circular doubly linked list.
    Node bTreeToClist(Node root)
    {
        //your code here
        Node prev=null;
        Node list=null;
        Stack<Node> st=new Stack<>();
        while(root!=null || !st.isEmpty()){
            if(root==null){
                if(prev==null){
                    list=st.peek();
                    prev=st.peek();
                }
                else{
                    prev.right=st.peek();
                    st.peek().left=prev;
                    prev=prev.right;
                }
                root=st.peek().right;
                st.pop();
            }else{
                st.push(root);
                root=root.left;
            }
        }
        prev.right=list;
        list.left=prev;
        return list;
    }
    
}



LINK : https://practice.geeksforgeeks.org/problems/binary-tree-to-cdll/1/?category[]=Tree&category[]=Tree&company[]=Amazon&company[]=Amazon&page=1&query=category[]Treecompany[]Amazonpage1company[]Amazoncategory[]Tree
