### RECURSIVE


class Solution{
    //Function to return list containing elements of right view of binary tree.
    int count=-1;
    void right(Node node,ArrayList<Integer> arr,int level){
        if(node==null)
          return ;
        if(count<level){
            count++;
            arr.add(node.data);
        }
        right(node.right,arr,level+1);
        right(node.left,arr,level+1);
    }
    ArrayList<Integer> rightView(Node node) {
        //add code here.
        ArrayList<Integer> arr=new ArrayList<>();
        right(node,arr,0);
        return arr;
    }
}




### ITERATIVE


class Tree{
    void rightView(Node root) {
        //add code here.
        if(root==null)
         return;
        Queue<Node> q=new LinkedList<>();
        q.add(root);
        while(!q.isEmpty())
        {
            int s=q.size();
            for(int i=1;i<=s;i++)
            {
                Node cur=q.poll();
                if(cur.left!=null)
                    q.add(cur.left);
                if(cur.right!=null)
                    q.add(cur.right);
                if(i==s)
                  System.out.print(cur.data+" ");
            }
        }
    }
}


LINK : https://practice.geeksforgeeks.org/problems/right-view-of-binary-tree/1/?category[]=Tree&category[]=Tree&company[]=Amazon&company[]=Amazon&page=1&query=category[]Treecompany[]Amazonpage1company[]Amazoncategory[]Tree
